version: "3.5"

services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    #    ports:
    #      - "5432"
    restart: unless-stopped
  api:
    depends_on:
      - "postgres"
    container_name: xor-api
    image: ghcr.io/dyrector-io/xor/api:v1
    restart: unless-stopped
    build:
      context: api
    expose:
      - "3333"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.xor-api.rule=Host(`cncf.xor.dyrector.io`) && PathPrefix(`/api`)"
      - "traefik.http.routers.xor-api.entrypoints=websecure"
      - "traefik.http.routers.xor-api.tls.certresolver=le"
      - "traefik.http.middlewares.xor-strip.stripprefix.prefixes=/api"
      - "traefik.http.routers.xor-api.middlewares=xor-strip"
    environment:
      DSN: ${DSN:-host=172.17.0.1 user=postgres password=password dbname=postgres port=5432 sslmode=disable}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://*, https://*"}

  ui:
    depends_on:
      - "api"
    container_name: xor-ui
    image: ghcr.io/dyrector-io/xor/ui:v1
    restart: unless-stopped
    # volumes:
    #   - "./web/nginx/ui.conf:/etc/nginx/conf.d/ui.conf"
    build:
      context: web
    #    ports:
    #      - "8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.xor-ui.rule=Host(`cncf.xor.dyrector.io`) && PathPrefix(`/`)"
      - "traefik.http.routers.xor-ui.entrypoints=websecure"
      - "traefik.http.routers.xor-ui.tls.certresolver=le"

volumes:
  postgres:
